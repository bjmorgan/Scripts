#!/usr/local/bin/ruby

# September 6, 2011

require 'appscript'
require 'osax'

abbrev_file = "/Users/ben/Dropbox/Notes/PlainText/journal\ abbreviations.txt"
$abbrev = File.open( abbrev_file, 'r' ).readlines.map{ |line| line.strip }

def records # still hoping that Papers2 will become AppleScriptable
  $papers.activate
  $system_events.processes["Papers2"].menu_bars[1].menu_bar_items['Edit'].menus['Edit'].menu_items['Copy As'].menus['Copy As'].menu_items['BibTeX Record'].click 
  clipboard = OSAX.osax.the_clipboard
  return clipboard[0] == "%" ? clipboard.split("\r\r")[1..-1] : [ clipboard ]
end

class String

  def parse_author_initials!
    replace( self.split("\r").map{ |line| /author/.match(line) ? line.gsub(/([A-Z])([A-Z])/, "\\1 \\2").gsub(/([A-Z])([ }])/, "\\1.\\2") : line }.join("\r") )
  end
  
  def parse_journal_titles!
    replace( self.split("\r").map do |line| 
      /journal/.match(line) ? $abbrev.inject( line ) { |l,re| l.gsub( /(#{re})([ \}])/, "\\1.\\2" ) } : line 
    end.join("\r") )
  end
  
  def parse_title!
    replace( self.split("\r").map{ |line| /title/.match(line) ? line.gsub(/\{\\(.)\}/,"\\1").gsub(/([\{\}])+/, "\\1") : line }.join("\r") )
  end
  
  def is_chem?
    re1 = /\A[A-Z].*[A-Z0-9]/
    re2 = /\A[A-Z]\Z/
    return ( re1.match(self) || re2.match(self) )
  end
  
end

$papers = Appscript.app("/Applications/Papers2.app")
bibdesk = Appscript.app("/Applications/BibDesk.app")

$system_events = Appscript.app("System Events.app")

library = "/Users/ben/Documents/Work/My Papers/Bibliography.bib"

bibdesk.run unless bibdesk.is_running?
bibdesk.open(MacTypes::Alias.path( library ) ) unless bibdesk.documents.count > 0 
records.each do |article| 
  article.parse_author_initials!
  article.parse_journal_titles!
  article.parse_title!
  bibdesk.documents[1].import( :from => article ) 
end
bibdesk.activate